zabbix_export:
  version: '7.2'
  media_types:
    - name: n8n
      type: WEBHOOK
      parameters:
        - name: alert_message
          value: '{ALERT.MESSAGE}'
        - name: alert_subject
          value: '{ALERT.SUBJECT}'
        - name: discord_endpoint
          value: '{ALERT.SENDTO}'
        - name: event_date
          value: '{EVENT.DATE}'
        - name: event_id
          value: '{EVENT.ID}'
        - name: event_name
          value: '{EVENT.NAME}'
        - name: event_nseverity
          value: '{EVENT.NSEVERITY}'
        - name: event_opdata
          value: '{EVENT.OPDATA}'
        - name: event_recovery_date
          value: '{EVENT.RECOVERY.DATE}'
        - name: event_recovery_time
          value: '{EVENT.RECOVERY.TIME}'
        - name: event_severity
          value: '{EVENT.SEVERITY}'
        - name: event_source
          value: '{EVENT.SOURCE}'
        - name: event_tags
          value: '{EVENT.TAGS}'
        - name: event_time
          value: '{EVENT.TIME}'
        - name: event_update_action
          value: '{EVENT.UPDATE.ACTION}'
        - name: event_update_date
          value: '{EVENT.UPDATE.DATE}'
        - name: event_update_message
          value: '{EVENT.UPDATE.MESSAGE}'
        - name: event_update_status
          value: '{EVENT.UPDATE.STATUS}'
        - name: event_update_time
          value: '{EVENT.UPDATE.TIME}'
        - name: event_update_user
          value: '{USER.FULLNAME}'
        - name: event_value
          value: '{EVENT.VALUE}'
        - name: host_ip
          value: '{HOST.IP}'
        - name: host_name
          value: '{HOST.NAME}'
        - name: trigger_description
          value: '{TRIGGER.DESCRIPTION}'
        - name: trigger_id
          value: '{TRIGGER.ID}'
        - name: URL
          value: 'http://localhost:5678/webhook' #EndereÃ§o de webhook n8n, colocar aqui!
      script: |
        try {
            var params = JSON.parse(value),
                req = new HttpRequest();
        
            req.addHeader('Content-Type: application/json');
        
            var body = {
                alert_message: params.alert_message,
                subject: params.alert_subject,
                n8n_endpoint: params.n8n_endpoint,
                event_date: params.event_date,
                event_id: params.event_id,
                event_name: params.event_name,
                event_nseverity: params.event_nseverity,
                event_opdata: params.event_opdata,
                event_recovery_date: params.event_recovery_date,
                event_recovery_time: params.event_recovery_time,
                event_severity: params.event_severity,
                event_source: params.event_source,
                event_tags: params.event_tags,
                event_time: params.event_time,
                event_update_action: params.event_update_action,
                event_update_date: params.event_update_date,
                event_update_message: params.event_update_message,
                event_update_status: params.event_update_status,
                event_update_time: params.event_update_time,
                event_update_user: params.event_update_user,
                event_value: params.event_value,
                host_ip: params.host_ip,
                host_name: params.host_name,
                trigger_description: params.trigger_description,
                trigger_id: params.trigger_id
            };
        
            var resp = req.post(params.URL, JSON.stringify(body));
            return resp;
        }
        catch (error) {
            throw 'Webhook failed: ' + error;
        }
      message_templates:
        - event_source: TRIGGERS
          operation_mode: PROBLEM
          message: |
            *{HOST.NAME}*
            ðŸŸ¥ `{EVENT.NAME}`
        - event_source: TRIGGERS
          operation_mode: RECOVERY
          subject: 'Resolved in {EVENT.DURATION}: {EVENT.NAME}'
          message: |
            *{HOST.NAME}*
            ðŸŸ© `{EVENT.NAME}`
            `Resolvido: {EVENT.RECOVERY.DATE} as {EVENT.RECOVERY.TIME}`
            
            `DuraÃ§Ã£o:` *{EVENT.DURATION}*
        - event_source: TRIGGERS
          operation_mode: UPDATE
          subject: 'AtualizaÃ§Ã£o manual registrada no evento'
          message: |
            ðŸ‘¤{USER.FULLNAME}
            `Data: {EVENT.UPDATE.DATE} Hora: {EVENT.UPDATE.TIME}`
            `Evento: {EVENT.NAME}`
            
            `Comentario:`
            {EVENT.UPDATE.MESSAGE}
